# Drop the schema if it exists, and (re)create the schema
DROP SCHEMA IF EXISTS powermonitor;
CREATE SCHEMA powermonitor;

# Change the active schema to powermonitor
USE powermonitor;

# Create the readings table
CREATE TABLE readings (
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP PRIMARY KEY,
    reading DOUBLE PRECISION
);

# Create user table
CREATE TABLE users (
    user_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    user_fname TINYTEXT NOT NULL,
    user_lname TINYTEXT NOT NULL,
    user_email TINYTEXT NOT NULL,
    user_passwd TEXT NOT NULL,
    user_is_admin BOOLEAN NOT NULL
    CHECK (LEN(user_passwd) > 8)
);

# Create alerts table
CREATE TABLE alerts (
    alert_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    alert_desc TEXT NOT NULL
);

# Create alert tip table
CREATE TABLE alert_tip (
    tip_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    tip_desc MEDIUMTEXT NOT NULL
);

# Create social media account table
CREATE TABLE social_media_account (
    acc_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    acc_type TEXT NOT NULL,
    acc_username TEXT NOT NULL,
    acc_passwd TEXT NOT NULL
);

# Create alert tips association table
CREATE TABLE alert_tips_ass (
    tip_id SMALLINT NOT NULL PRIMARY KEY,
    alert_id SMALLINT NOT NULL PRIMARY KEY,
    FOREIGN KEY (tip_id) REFERENCES alert_tip (tip_id) ON DELETE CASCADE,
    FOREIGN KEY (alert_id) REFERENCES alerts (alert_id) ON DELETE CASCADE
);

# Create user alerts association table
CREATE TABLE user_alerts_ass (
    user_id SMALLINT NOT NULL PRIMARY KEY,
    alert_id SMALLINT NOT NULL PRIMARY KEY,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (alert_id) REFERENCES alerts (alert_id) ON DELETE CASCADE
);

# Create user social media association table
CREATE TABLE user_social_media (
    user_id SMALLINT NOT NULL PRIMARY KEY,
    acc_id SMALLINT NOT NULL PRIMARY KEY,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (acc_id) REFERENCES social_media_account (acc_id) ON DELETE CASCADE
);

# Create food table
CREATE TABLE food (
    food_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    food_desc TEXT NOT NULL,
    food_spoil_time DOUBLE PRECISION NOT NULL
);

# Create house foods table
CREATE TABLE house_foods (
    item_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    food_id SMALLINT NOT NULL,
    FOREIGN KEY (food_id) REFERENCES food (food_id) ON DELETE CASCADE
);

# Create post paid table
CREATE TABLE post_paid (
    unit_id SMALLINT NOT NULL DEFAULT 1 AUTO_INCREMENT PRIMARY KEY,
    unit_cost DOUBLE PRECISION NOT NULL,
    CHECK (unit_cost > 0.0)
);

# Create prepaid topup table
CREATE TABLE prepaid_topups (
    topup_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP PRIMARY KEY,
    topup_amount DOUBLE PRECISION NOT NULL,
    topup_units INT NOT NULL,
    CHECK (topup_amount > 0.0),
    CHECK (topup_units > 0)
);